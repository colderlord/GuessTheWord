// <auto-generated />
using System;
using GuessWord.API.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GuessWord.API.Migrations
{
    [DbContext(typeof(GuessGameContext))]
    partial class GuessGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GuessWord.API.Model.GuessGame", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GuessGame");
                });

            modelBuilder.Entity("GuessWord.API.Model.HistoryItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("GuessGameId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuessGameId");

                    b.ToTable("HistoryItem");
                });

            modelBuilder.Entity("GuessWord.API.Model.LetterModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<char>("Char")
                        .HasColumnType("character(1)");

                    b.Property<short>("Position")
                        .HasColumnType("smallint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long?>("WordModelId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WordModelId");

                    b.ToTable("LetterModel");
                });

            modelBuilder.Entity("GuessWord.API.Model.Settings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Attempts")
                        .HasColumnType("integer");

                    b.Property<long?>("GuessGameId")
                        .HasColumnType("bigint");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WordLength")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuessGameId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("GuessWord.API.Model.WordModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("HistoryItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HistoryItemId")
                        .IsUnique();

                    b.ToTable("WordModel");
                });

            modelBuilder.Entity("GuessWord.API.Model.HistoryItem", b =>
                {
                    b.HasOne("GuessWord.API.Model.GuessGame", "GuessGame")
                        .WithMany("History")
                        .HasForeignKey("GuessGameId");

                    b.Navigation("GuessGame");
                });

            modelBuilder.Entity("GuessWord.API.Model.LetterModel", b =>
                {
                    b.HasOne("GuessWord.API.Model.WordModel", "WordModel")
                        .WithMany("Letters")
                        .HasForeignKey("WordModelId");

                    b.Navigation("WordModel");
                });

            modelBuilder.Entity("GuessWord.API.Model.Settings", b =>
                {
                    b.HasOne("GuessWord.API.Model.GuessGame", "GuessGame")
                        .WithOne("Settings")
                        .HasForeignKey("GuessWord.API.Model.Settings", "GuessGameId");

                    b.Navigation("GuessGame");
                });

            modelBuilder.Entity("GuessWord.API.Model.WordModel", b =>
                {
                    b.HasOne("GuessWord.API.Model.HistoryItem", "HistoryItem")
                        .WithOne("WordModel")
                        .HasForeignKey("GuessWord.API.Model.WordModel", "HistoryItemId");

                    b.Navigation("HistoryItem");
                });

            modelBuilder.Entity("GuessWord.API.Model.GuessGame", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Settings")
                        .IsRequired();
                });

            modelBuilder.Entity("GuessWord.API.Model.HistoryItem", b =>
                {
                    b.Navigation("WordModel")
                        .IsRequired();
                });

            modelBuilder.Entity("GuessWord.API.Model.WordModel", b =>
                {
                    b.Navigation("Letters");
                });
#pragma warning restore 612, 618
        }
    }
}
